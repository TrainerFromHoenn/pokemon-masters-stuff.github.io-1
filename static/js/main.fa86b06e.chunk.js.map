{"version":3,"sources":["data/pokemonList.js","data/shortenedMoveNameByCellId.js","components/SelectPokemonDropdown/styles.js","components/SelectPokemonDropdown/index.js","actions/actionCreators.js","actions/types.js","components/ResetGridButton/Mobile.js","components/ResetGridButton/Desktop.js","components/SyncGridControls/styles.js","components/SyncGridControls/index.js","components/FeedbackForm/Desktop.js","components/FeedbackForm/Mobile.js","components/Navigation/styles.js","components/Navigation/index.js","components/SelectedSkillList/styles.js","components/SelectedSkillList/Mobile.js","components/SelectedSkillList/Desktop.js","components/SkillOverview/styles.js","components/SkillOverview/Mobile.js","components/SkillOverview/Desktop.js","components/MainAppbar/styles.js","components/MainAppbar/index.js","components/Hexagon/HexGrid.js","components/Hexagon/Hex.js","components/Hexagon/Point.js","components/Hexagon/HexUtils.js","components/Hexagon/Orientation.js","components/Hexagon/Layout.js","components/Hexagon/Text.js","components/Hexagon/Hexagon.js","components/Hexagon/Pattern.js","components/GridMap/styles.js","components/GridMap/index.js","containers/MobileLayout/styles.js","containers/MobileLayout/index.js","containers/DesktopLayout/index.js","reducers/pokemonReducer.js","reducers/gridReducer.js","reducers/index.js","serviceWorker.js","theme/index.js","index.js","utils/constants.js"],"names":["pokemonList","name","id","map","obj","index","key","value","1306020310320","1202010300058","2100058004","2172400025","1301150800000","2201010100000","1301140300000","1202010400196","2200196005","2100196005","1306020319080","2100007004","1202010300007","2171700025","1301060100000","1804190100000","1804180200000","1306020310060","1202010300126","2200126005","2100126005","1301010200000","2170900025","1202010300078","1202010200412","2100412004","2201030200412","1306020319040","1306020310080","1301180500000","1804220900078","1301120500000","1704070200078","2170600025","2100225004","2100225005","1301120500434","1306020310280","1202010400434","1202030600000","1808010400434","2200434010","1306020319030","2201010100225","1202010300225","1804200600000","2100434004","1301060500000","2170700025","1301130500000","1306020310290","1202010300261","1202010400052","2100052004","2200261010","1703050100000","2201050100309","2100309004","1202010200309","1202010300442","1804360900418","1306020319010","1306020310900","2201020100442","2100442005","2160700025","1306020310920","1704060410920","2100337003","2100337004","1805060100337","1202010200337","2100200004","1202010300200","1301170500200","2174900025","2100202003","1202010300202","1101020200202","1202010300412","2201030100412","1306020219031","1306020211010","1704080111010","2170000025","2200087020","2100087005","2100059005","2200059020","2100129005","1202010300129","2100094004","2200126010","1306020311370","1804200200000","1306020319050","1301090300000","2179700025","1101020119000","1306020319000","2100084003","2100084004","2100084005","2201010100084","1202010400084","2100085004","2100085005","2100085006","2201010100085","1202010300085","1306020317000","1301010500000","1301010900000","2175900025","2100307004","2100257003","1306020319082","2160900025","2100394006","1306020310000","1808010410000","createStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","withStyles","styles","props","classes","selectedPokemon","onChangeHandler","React","useState","pokemon","setPokemon","inputLabel","useRef","labelWidth","setLabelWidth","useEffect","current","offsetWidth","FormControl","variant","size","className","InputLabel","ref","Select","labelId","onChange","event","target","MenuItem","selectPokemon","type","resetGrids","ResetGridButton","dispatch","useDispatch","Button","onClick","pokemonControls","onChangePokemonHandler","onOpenSkillListHandler","Grid","container","alignItems","justify","style","item","SelectPokemonDropdown","startIcon","FeedbackForm","submitForm","bind","state","status","this","tabIndex","role","aria-labelledby","aria-hidden","onSubmit","action","method","ev","preventDefault","form","data","FormData","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","reset","setState","send","Component","FeedBackForm","onCloseModalHandler","Dialog","onClose","fullWidth","DialogTitle","DialogContent","DialogActions","DialogContentText","listRoot","width","maxWidth","listIcon","marginRight","setOpen","isOpened","onCloseHandler","Drawer","ListItem","button","ListItemIcon","ListItemText","primary","listTitle","padding","listDivider","marginBottom","onOpenHandler","skillList","SwipeableDrawer","anchor","onOpen","dense","Typography","Divider","Boolean","length","skill","SelectedSkillList","selectedCellsById","grid","Object","keys","cellId","sort","remainingEnergy","orbSpent","renderList","connect","skillOverviewCardWrapper","position","top","left","right","bottom","skillOverviewCard","textAlign","skillOverviewCardTitle","fontSize","skillOverviewContent","marginLeft","skillOverviewCardFooter","justifyContent","paddingTop","description","energy","Card","CardContent","component","gutterBottom","SkillOverview","gridData","renderContent","menuButton","title","flexGrow","subToolbar","background","palette","paper","color","common","black","onOpenNavHandler","AppBar","Toolbar","IconButton","edge","aria-label","orbs","HexGrid","height","viewBox","version","xmlns","children","defaultProps","Hex","q","r","s","Point","x","y","HexUtils","a","b","k","hex","parseInt","Math","abs","lengths","subtract","direction","DIRECTIONS","add","array","i","push","neighbour","rq","round","rr","rs","qDiff","rDiff","sDiff","layout","M","orientation","f0","f1","f2","f3","origin","point","pt","b0","b1","b2","b3","t","lerp","Orientation","startAngle","Layout","flat","rest","LAYOUT_FLAT","LAYOUT_POINTY","points","calculateCoordinates","join","assign","corner","angle","PI","cos","sin","corners","center","Array","from","offset","getPointOffset","sqrt","childContextTypes","PropTypes","object","string","Text","textAnchor","text","Text_","Hexagon","context","e","onClickHandler","pixel","hexToPixel","nextProps","onMouseEnter","displayGridData","onMouseOver","onMouseLeave","hideGridData","fill","cellStyle","fillId","transform","draggable","data-coords","data-q","data-r","data-cell-id","classNames","contextTypes","Pattern","link","patternUnits","xlinkHref","progressWrapper","selectedPokemonCell","textTransform","allSyncGrids","pikachuGridData","torkoalGridData","infernapeGridData","dewgongGridData","haxorusGridData","kingdraGridData","serperiorGridData","vileplumeGridData","mewGridData","charizardGridData","metagrossGridData","GridMap","initialRender","mapSizeBoundaries","viewbox","screenWidth","document","body","clientWidth","fitMapToScreen","clientWrappingBoundaries","updatedMapSizeBoundaries","clientHeight","toFixed","prevState","getFillColorByMoveType","group","isLocked","colorsByTypeDef","cellColor","1","2","3","4","5","6","7","8","9","10","renderMoveName","moveName","abilityId","renderedMoveName","shortenedMoveNameByCellId","renderHexagonCells","cell","nameWithSyncLvRequirement","move","substring","coords","hexagonProps","energyCost","mouseEnter","mouseLeave","ability","locked","handleClick","undefined","setTimeout","window","addEventListener","removeEventListener","stopPropagation","removeFromGridList","addBackToRemainingEnergy","addToGridList","subtractFromRemainingEnergy","CircularProgress","toLowerCase","mainContainer","paddingBottom","syncGridWrapper","overflow","MobileApp","isNavOpened","isSkillListOpened","handleOnCloseNav","handleOnOpenNav","handleOnCloseSkillList","handleOnOpenSkillList","handleOnChangePokemon","ReactGA","pageview","location","pathname","search","xs","DesktopLayout","data-toggle","data-target","initialState","activeGridList","combineReducers","updateSelectedCellsById","slice","indexOf","hostname","match","createMuiTheme","main","secondary","persistConfig","storage","migrate","createMigrate","migrations","debug","0","persistedReducer","persistReducer","rootReducer","store","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","initialize","ReactDOM","render","loading","ThemeProvider","Hidden","smDown","mdUp","MobileLayout","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fa86b06e.chunk.js","sourcesContent":["let list = [\r\n  { name: 'Pikachu', id: 20002500 },\r\n  { name: 'Torkoal', id: 20032401 },\r\n  { name: 'Infernape', id: 20039200 },\r\n  { name: 'Dewgong', id: 20008700 },\r\n  { name: 'Haxorus', id: 20061201 },\r\n  { name: 'Kingdra', id: 20038400 },\r\n  { name: 'Serperior', id: 20049701 },\r\n  { name: 'Vileplume', id: 20004501 },\r\n  { name: 'Mew', id: 20000600 },\r\n  { name: 'Metagross', id: 20037600 },\r\n  { name: 'Charizard', id: 20015111 }\r\n];\r\n\r\nlet pokemonList = list.map((obj, index) => {\r\n  return {\r\n    ...obj,\r\n    key: index,\r\n    value: obj.name,\r\n    id: obj.id\r\n  };\r\n});\r\n\r\nexport default pokemonList;\r\n","export default {\r\n  1306020310320: 'ITYAL MPR 3',\r\n  1202010300058: 'I.B. MGR 3',\r\n  2100058004: 'I.B. +4',\r\n  2172400025: 'Sync +25',\r\n  1301150800000: 'F.S. 8',\r\n  2201010100000: 'H.E. 1',\r\n  1301140300000: 'I.H 3',\r\n  1202010400196: 'I.W. MGR 4',\r\n  2200196005: 'I.W. Acc +5',\r\n  2100196005: 'I.W. +5',\r\n  1306020319080: 'D.H. MPR 3',\r\n  2100007004: 'F.P. +3',\r\n  1202010300007: 'F.P. MPR 3',\r\n  2171700025: 'Sync +25',\r\n  1301060100000: 'C.S. 1',\r\n  1804190100000: 'S.E. 1',\r\n  1804180200000: 'Spd E. 2',\r\n  1306020310060: 'W.O.F MPR 3',\r\n  1202010300126: 'F.B MGR 3',\r\n  2200126005: 'F.B. Acc +5',\r\n  2100126005: 'Fire Blast +5',\r\n  1301010200000: 'P.R. 2',\r\n  2170900025: 'Sync +25',\r\n  1202010300078: 'S.S. MGR 3',\r\n  1202010200412: 'E.B. MGR 2',\r\n  2100412004: 'E.B. +4',\r\n  2201030200412: 'E.B. O.R. 2',\r\n  1306020319040: 'X Sp.Def MPR 3',\r\n  1306020310080: 'P.I.O MPR 3',\r\n  1301180500000: 'C.S. 5',\r\n  1804220900078: 'S.S. S.S. 9',\r\n  1301120500000: 'P.S. 5',\r\n  1704070200078: 'S.S. F 2',\r\n  2170600025: 'Sync +25',\r\n  2100225004: 'D.B. +4',\r\n  2100225005: 'D.B. +5',\r\n  1301120500434: 'D.M. P.S. 5',\r\n  1306020310280: 'Y.I.M MPR 3',\r\n  1202010400434: 'D.M. MGR 4',\r\n  1202030600000: 'Sta.R. 6',\r\n  1808010400434: 'D.M. S.Q. 4',\r\n  2200434010: 'D.M. Acc +10',\r\n  1306020319030: 'X Sp.Atk MPR 3',\r\n  2201010100225: 'D.B. H.E. 1',\r\n  1202010300225: 'D.B. MGR 3',\r\n  1804200600000: 'Sp.R. 6',\r\n  2100434004: 'D.M. +4',\r\n  1301060500000: 'C.S. 5',\r\n  2170700025: 'Sync +25',\r\n  1301130500000: 'B.S. 5',\r\n  1306020310290: 'T.H.T.H MPR 3',\r\n  1202010300261: 'WoW MGR 3',\r\n  1202010400052: 'Ember MGR 4',\r\n  2100052004: 'Ember +4',\r\n  2200261010: 'WoW Acc +10',\r\n  1703050100000: 'N.R.',\r\n  2201050100309: 'M.M. S.B.1',\r\n  2100309004: 'M.M. +4',\r\n  1202010200309: 'M.M. MGR 2',\r\n  1202010300442: 'I.H. MGR 3',\r\n  1804360900418: 'B.P. E.E. 9',\r\n  1306020319010: 'X Att MPR 3',\r\n  1306020310900: 'B.T.I. MPR 3',\r\n  2201020100442: 'I.H. A. 1',\r\n  2100442005: 'I.H. +5',\r\n  2160700025: 'Sync +25',\r\n  1306020310920: 'Y.G.D MPR 3',\r\n  1704060410920: 'Y.G.D. D 4',\r\n  2100337003: 'D.C. +3',\r\n  2100337004: 'D.C. +4',\r\n  1805060100337: 'D.C. Z 1',\r\n  1202010200337: 'D.C. MGR 2',\r\n  2100200004: 'Outrage +4',\r\n  1202010300200: 'Outrage MGR 3',\r\n  1301170500200: 'O.C.B. 5',\r\n  2174900025: 'Sync +25',\r\n  2100202003: 'G.D. +3',\r\n  1202010300202: 'G.D. MGR 3',\r\n  1101020200202: 'G.D. M.H. 2',\r\n  1202010300412: 'E.B. MGR 3',\r\n  2201030100412: 'E.B.O.A.R 1',\r\n  1306020219031: 'X Sp.Atk MPR 2',\r\n  1306020211010: 'T.T.E. MPR 2',\r\n  1704080111010: 'T.T.E. S',\r\n  2170000025: 'Sync +25',\r\n  2200087020: 'Thund. Acc. +20',\r\n  2100087005: 'Thunder +5',\r\n  2100059005: 'Blizzard +5',\r\n  2200059020: 'Blizz. Acc. +20',\r\n  2100129005: 'Swift + 5',\r\n  1202010300129: 'Swift MGR 3',\r\n  2100094004: 'Psychic +4',\r\n  2200126010: 'F.B. Acc. +10',\r\n  1306020311370: 'A.W.O.D. MPR 3',\r\n  1804200200000: 'S.R. 2',\r\n  1306020319050: 'X Speed MPR 3',\r\n  1301090300000: 'W.S. 3',\r\n  2179700025: 'Sync +25',\r\n  1101020119000: 'P. MH 1',\r\n  1306020319000: 'P. MPR 3',\r\n  2100084003: 'T.S. +3',\r\n  2100084004: 'T.S. +4',\r\n  2100084005: 'T.S. +5',\r\n  2201010100084: 'T.S. HE 1',\r\n  1202010400084: 'T.S. MGR 4',\r\n  2100085004: 'T.B. +4',\r\n  2100085005: 'T.B. +5',\r\n  2100085006: 'T.B. +6',\r\n  2201010100085: 'T.B. HE 1',\r\n  1202010300085: 'T.B. MGR 3',\r\n  1306020317000: 'J.S. MPR 3',\r\n  1301010500000: 'P.R. 5',\r\n  1301010900000: 'P.R. 9',\r\n  2175900025: 'Sync +25',\r\n  2100307004: 'B.B. +4',\r\n  2100257003: 'H.W. +3',\r\n  1306020319082: 'D.H.+. MPR 3',\r\n  2160900025: 'Sync + 25',\r\n  2100394006: 'F.B. +6',\r\n  1306020310000: 'M.D. MPR 3',\r\n  1808010410000: 'M.D.S.Q. 4'\r\n};\r\n","import { createStyles } from '@material-ui/core/styles';\r\n\r\nexport default createStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));","import React from 'react';\r\nimport { withStyles } from '@material-ui/core';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport { pokemonList } from '../../data';\r\nimport styles from './styles';\r\n\r\nfunction SimpleSelect(props) {\r\n  const { classes, selectedPokemon, onChangeHandler } = props;\r\n  const [pokemon, setPokemon] = React.useState(selectedPokemon);\r\n\r\n  const inputLabel = React.useRef(null);\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    setLabelWidth(inputLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  const handleChange = event => {\r\n    setPokemon(event.target.value);\r\n    onChangeHandler(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <FormControl\r\n      variant=\"outlined\"\r\n      size=\"small\"\r\n      className={classes.formControl}\r\n    >\r\n      <InputLabel ref={inputLabel} id=\"select-pokemon\">\r\n        Pokemon\r\n      </InputLabel>\r\n      <Select\r\n        labelId=\"select-pokemon\"\r\n        value={pokemon}\r\n        onChange={handleChange}\r\n        labelWidth={labelWidth}\r\n      >\r\n        {pokemonList.map((pokemon, index) => (\r\n          <MenuItem key={index} value={pokemon.name}>\r\n            {pokemon.name}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(SimpleSelect);\r\n","import {\r\n  SELECT_POKEMON,\r\n  SELECT_GRID,\r\n  DESELECT_GRID,\r\n  ADD_TO_GRID_LIST,\r\n  REMOVE_FROM_GRID_LIST,\r\n  DISPLAY_GRID_DATA,\r\n  HIDE_GRID_DATA,\r\n  SUBTRACT_FROM_REMAINING_ENERGY,\r\n  ADD_BACK_TO_REMAINING_ENERGY,\r\n  RESET_GRIDS\r\n} from './types';\r\n\r\nexport const selectPokemon = selectedPokemon => ({\r\n  type: SELECT_POKEMON,\r\n  selectedPokemon\r\n});\r\n\r\nexport const addToGridList = gridData => ({\r\n  type: ADD_TO_GRID_LIST,\r\n  gridData\r\n});\r\n\r\nexport const subtractFromRemainingEnergy = gridData => ({\r\n  type: SUBTRACT_FROM_REMAINING_ENERGY,\r\n  gridData\r\n});\r\n\r\nexport const removeFromGridList = gridData => ({\r\n  type: REMOVE_FROM_GRID_LIST,\r\n  gridData\r\n});\r\n\r\nexport const addBackToRemainingEnergy = gridData => ({\r\n  type: ADD_BACK_TO_REMAINING_ENERGY,\r\n  gridData\r\n});\r\n\r\nexport const displayGridData = gridData => ({\r\n  type: DISPLAY_GRID_DATA,\r\n  gridData\r\n});\r\n\r\nexport const hideGridData = () => ({\r\n  type: HIDE_GRID_DATA\r\n});\r\n\r\nexport const resetGrids = () => ({\r\n  type: RESET_GRIDS\r\n});\r\n","export const SELECT_POKEMON = 'select_pokemon';\r\nexport const ADD_TO_GRID_LIST = 'add_to_grid_list';\r\nexport const REMOVE_FROM_GRID_LIST = 'remove_from_grid_list';\r\nexport const DISPLAY_GRID_DATA = 'display_grid_data';\r\nexport const HIDE_GRID_DATA = 'hide_grid_data';\r\nexport const SUBTRACT_FROM_REMAINING_ENERGY = 'subtract_from_remaining_energy';\r\nexport const ADD_BACK_TO_REMAINING_ENERGY = 'add_back_to_remaining_energy';\r\nexport const RESET_GRIDS = 'reset_grids';\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useDispatch } from 'react-redux';\r\nimport { resetGrids } from '../../actions/actionCreators';\r\n\r\nconst ResetGridButton = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnClick = () => dispatch(resetGrids());\r\n\r\n  return (\r\n    <Button variant=\"outlined\" onClick={handleOnClick}>\r\n      Reset\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ResetGridButton;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { resetGrids } from '../../actions/actionCreators';\r\n\r\nconst ResetGridButton = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnClick = () => dispatch(resetGrids());\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn btn-warning ml-2\"\r\n      onClick={handleOnClick}\r\n    >\r\n      Reset\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ResetGridButton;\r\n","import { createStyles } from '@material-ui/core/styles';\r\n\r\nexport default createStyles(theme => ({\r\n  pokemonControls: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n}));","import React from 'react';\r\nimport { withStyles } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport ListIcon from '@material-ui/icons/List';\r\n\r\nimport SelectPokemonDropdown from '../SelectPokemonDropdown';\r\nimport { ResetGridButtonMobile } from '../ResetGridButton';\r\nimport styles from './styles';\r\n\r\nfunction SyncGridControls(props) {\r\n  const {\r\n    classes,\r\n    selectedPokemon,\r\n    onChangePokemonHandler,\r\n    onOpenSkillListHandler\r\n  } = props;\r\n\r\n  const handleOnOpenSkillList = () =>\r\n    typeof onOpenSkillListHandler === 'function'\r\n      ? onOpenSkillListHandler()\r\n      : null;\r\n\r\n  const handleOnChangePokemonHandler = pokemon =>\r\n    typeof onChangePokemonHandler === 'function'\r\n      ? onChangePokemonHandler(pokemon)\r\n      : null;\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      className={classes.pokemonControls}\r\n      alignItems=\"flex-start\"\r\n      justify=\"space-evenly\"\r\n      style={{ marginTop: 0 }}\r\n    >\r\n      <Grid item>\r\n        <SelectPokemonDropdown\r\n          selectedPokemon={selectedPokemon}\r\n          onChangeHandler={handleOnChangePokemonHandler}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <div style={{ marginTop: 10 }}>\r\n          <ResetGridButtonMobile />\r\n        </div>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={handleOnOpenSkillList}\r\n          startIcon={<ListIcon />}\r\n          style={{ marginTop: 10 }}\r\n        >\r\n          Selected\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(SyncGridControls);\r\n","// Customize this 'myform.js' script and add it to your JS bundle.\r\n// Then import it with 'import MyForm from \"./myform.js\"'.\r\n// Finally, add a <MyForm/> element whereever you wish to display the form.\r\n\r\nimport React from 'react';\r\n\r\nexport default class FeedbackForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.submitForm = this.submitForm.bind(this);\r\n    this.state = {\r\n      status: ''\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { status } = this.state;\r\n    return (\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"feedbackModal\"\r\n        tabIndex=\"-1\"\r\n        role=\"dialog\"\r\n        aria-labelledby=\"feedbackModalCenterTitle\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog mt-5 w-50\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"feedBackModalLongTitle\">\r\n                Feedback\r\n              </h5>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form\r\n                onSubmit={this.submitForm}\r\n                action=\"https://formspree.io/xyywkgow\"\r\n                method=\"POST\"\r\n              >\r\n                <textarea\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"textboxid\"\r\n                  name=\"message\"\r\n                />\r\n                {status === 'SUCCESS' ? (\r\n                  <p className=\"mt-2\">Thank you for the feedback!</p>\r\n                ) : (\r\n                  <button className=\"mt-2 btn btn-primary\">Submit</button>\r\n                )}\r\n                {status === 'ERROR' && <p>Ooops! There was an error.</p>}\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  submitForm(ev) {\r\n    ev.preventDefault();\r\n    const form = ev.target;\r\n    const data = new FormData(form);\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open(form.method, form.action);\r\n    xhr.setRequestHeader('Accept', 'application/json');\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\r\n      if (xhr.status === 200) {\r\n        form.reset();\r\n        this.setState({ status: 'SUCCESS' });\r\n      } else {\r\n        this.setState({ status: 'ERROR' });\r\n      }\r\n    };\r\n    xhr.send(data);\r\n  }\r\n}\r\n","// Customize this 'myform.js' script and add it to your JS bundle.\r\n// Then import it with 'import MyForm from \"./myform.js\"'.\r\n// Finally, add a <MyForm/> element whereever you wish to display the form.\r\n\r\nimport React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n\r\nexport default class FeedBackForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.submitForm = this.submitForm.bind(this);\r\n    this.state = {\r\n      status: ''\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { status } = this.state;\r\n    const { open, onCloseModalHandler } = this.props;\r\n\r\n    const handleCloseModal = () =>\r\n      typeof onCloseModalHandler === 'function' ? onCloseModalHandler() : null;\r\n\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleCloseModal}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        fullWidth={false}\r\n      >\r\n        <form\r\n          onSubmit={this.submitForm}\r\n          action=\"https://formspree.io/xyywkgow\"\r\n          method=\"POST\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Feedback</DialogTitle>\r\n          <DialogContent>\r\n            {/* FormSpree doesn't support MUI Textfield or Button */}\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"textboxid\"\r\n              name=\"message\"\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            {status === 'SUCCESS' ? (\r\n              <DialogContentText>Thanks!</DialogContentText>\r\n            ) : (\r\n              <button className=\"btn btn-primary mr-3\">Submit</button>\r\n            )}\r\n            {status === 'ERROR' && (\r\n              <DialogContentText>Ooops! There was an error.</DialogContentText>\r\n            )}\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  submitForm(ev) {\r\n    ev.preventDefault();\r\n    const form = ev.target;\r\n    const data = new FormData(form);\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open(form.method, form.action);\r\n    xhr.setRequestHeader('Accept', 'application/json');\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\r\n      if (xhr.status === 200) {\r\n        form.reset();\r\n        this.setState({ status: 'SUCCESS' });\r\n      } else {\r\n        this.setState({ status: 'ERROR' });\r\n      }\r\n    };\r\n    xhr.send(data);\r\n  }\r\n}\r\n","import { createStyles } from '@material-ui/core/styles';\r\n\r\nexport default createStyles(theme => ({\r\n  listRoot: {\r\n    width: \"100%\",\r\n    minWidth: 220,\r\n    maxWidth: 360,\r\n  },\r\n  listIcon: {\r\n    minWidth: theme.spacing(3),\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));","import React from 'react';\r\nimport { withStyles } from '@material-ui/core';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\n\r\nimport { FeedbackFormMobile } from '../FeedbackForm';\r\n\r\nimport styles from './styles';\r\n\r\nfunction Navigation(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const { classes, isOpened, onCloseHandler } = props;\r\n\r\n  const handleOnClose = () =>\r\n    typeof onCloseHandler === 'function' ? onCloseHandler() : null;\r\n\r\n  const handleClickOpenModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer open={isOpened} onClose={handleOnClose}>\r\n      <List className={classes.listRoot}>\r\n        <ListItem button onClick={handleClickOpenModal}>\r\n          <ListItemIcon className={classes.listIcon}>\r\n            <FeedbackIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Submit Feedback\" />\r\n        </ListItem>\r\n        <FeedbackFormMobile\r\n          open={open}\r\n          onCloseModalHandler={handleCloseModal}\r\n        />\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(Navigation);\r\n","import { createStyles } from '@material-ui/core/styles';\r\n\r\nexport default createStyles(theme => ({\r\n  listTitle: {\r\n    padding: theme.spacing(0, 2, 1)\r\n  },\r\n  listDivider: {\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  listRoot: {\r\n    width: \"70vw\",\r\n    minWidth: 220,\r\n    maxWidth: 360,\r\n  },\r\n}));","import React from 'react';\r\nimport { withStyles } from '@material-ui/core';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport styles from './styles';\r\n\r\nfunction SelectedSkillList(props) {\r\n  const { classes, isOpened, onOpenHandler, onCloseHandler, skillList } = props;\r\n\r\n  const handleOnOpen = () =>\r\n    typeof onOpenHandler === 'function' ? onOpenHandler() : null;\r\n\r\n  const handleOnClose = () =>\r\n    typeof onCloseHandler === 'function' ? onCloseHandler() : null;\r\n\r\n  return (\r\n    <SwipeableDrawer\r\n      anchor=\"right\"\r\n      open={isOpened}\r\n      onOpen={handleOnOpen}\r\n      onClose={handleOnClose}\r\n    >\r\n      <List dense className={classes.listRoot}>\r\n        <Typography variant=\"h6\" className={classes.listTitle}>\r\n          Selected Grids\r\n        </Typography>\r\n\r\n        <Divider className={classes.listDivider} />\r\n\r\n        {Boolean(skillList && skillList.length) &&\r\n          skillList.map((skill, index) => (\r\n            <ListItem key={index}>\r\n              <ListItemText primary={skill} />\r\n            </ListItem>\r\n          ))}\r\n      </List>\r\n    </SwipeableDrawer>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(SelectedSkillList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass SelectedSkillList extends Component {\r\n  renderList() {\r\n    const { selectedCellsById } = this.props.grid;\r\n    let skillList = Object.keys(selectedCellsById)\r\n      .map(cellId => {\r\n        return selectedCellsById[cellId].name;\r\n      })\r\n      .sort();\r\n\r\n    return skillList.map((item, index) => {\r\n      return (\r\n        <li className=\"active-grid list-group-item\" key={index}>\r\n          {item}\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"active-grid-list\">\r\n        <div className=\"card mt-5\">\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">\r\n              Remaining Energy: {this.props.grid.remainingEnergy}\r\n              <p>Orbs Spent: {this.props.grid.orbSpent}</p>\r\n            </h5>\r\n            <ul className=\"list-group list-group-flush\">\r\n              {' '}\r\n              {this.renderList()}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  grid: state.grid\r\n});\r\n\r\nexport default connect(mapStateToProps)(SelectedSkillList);\r\n","import { createStyles } from '@material-ui/core/styles';\r\n\r\nexport default createStyles(theme => ({\r\n  skillOverviewCardWrapper: {\r\n    position: \"fixed\",\r\n    top: \"auto\",\r\n    left: -1,\r\n    right: -1,\r\n    bottom: 0,\r\n  },\r\n  skillOverviewCard: {\r\n    minWidth: 275,\r\n    textAlign: \"center\",\r\n  },\r\n  skillOverviewCardTitle: {\r\n    fontSize: 16,\r\n  },\r\n  skillOverviewContent: {\r\n    maxWidth: 455,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  skillOverviewCardFooter: {\r\n    justifyContent: \"center\",\r\n    paddingTop: 0,\r\n  },\r\n}));","import React from 'react';\r\nimport { withStyles } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport styles from './styles';\r\n\r\nfunction SkillOverview(props) {\r\n  const { classes, skill, description, energy } = props;\r\n\r\n  return (\r\n    Boolean(skill) && (\r\n      <div className={classes.skillOverviewCardWrapper}>\r\n        <Card className={classes.skillOverviewCard} variant=\"outlined\">\r\n          <CardContent>\r\n            <Typography variant=\"h6\" component=\"p\" className={classes.skillOverviewCardTitle}>\r\n              {skill}\r\n            </Typography>\r\n              {Boolean(description) && (\r\n            <Typography variant=\"body2\" component=\"p\" gutterBottom className={classes.skillOverviewContent}>\r\n                  {description}\r\n            </Typography>\r\n              )}\r\n            <Typography variant=\"body1\" component=\"p\" className={classes.skillOverviewContent}>\r\n              Energy Cost: {energy}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(SkillOverview);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass SkillOverview extends Component {\r\n  renderContent() {\r\n    if (this.props.grid.gridData.name) {\r\n      return (\r\n        <div className=\"card\">\r\n          <ul>\r\n            <li className=\"text-center m-2\">\r\n              <strong>{this.props.grid.gridData.name}</strong>\r\n            </li>\r\n            {Boolean(this.props.grid.gridData.description) && (\r\n              <li className=\"text-center mb-0\" style={{padding: \"0 24px 8px\"}}>\r\n                {this.props.grid.gridData.description}\r\n              </li>\r\n            )}\r\n            <li className=\"text-center mb-0\">\r\n              <strong>Energy: {this.props.grid.gridData.energy}</strong>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.renderContent()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  grid: state.grid\r\n});\r\n\r\nexport default connect(mapStateToProps)(SkillOverview);\r\n","import { createStyles } from '@material-ui/core/styles';\r\n\r\nexport default createStyles(theme => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  subToolbar: {\r\n    background: theme.palette.background.paper,\r\n    color: theme.palette.common.black,\r\n  }\r\n}));","import React from 'react';\r\nimport { withStyles } from '@material-ui/core';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AppBar from '@material-ui/core/AppBar';\r\n\r\nimport styles from './styles';\r\n\r\nfunction MainAppbar(props) {\r\n  const { classes, onOpenNavHandler, data } = props;\r\n\r\n  const handleOnOpenNav = () =>\r\n    typeof onOpenNavHandler === 'function' ? onOpenNavHandler() : null;\r\n\r\n  return (\r\n    <AppBar position=\"fixed\">\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          className={classes.menuButton}\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n          onClick={handleOnOpenNav}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          Sync Grid Helper\r\n        </Typography>\r\n      </Toolbar>\r\n\r\n      <Toolbar className={classes.subToolbar}>\r\n        <Typography variant=\"body1\" className={classes.title}>\r\n          Remaining Energy: {data.energy}\r\n        </Typography>\r\n        <Typography variant=\"body1\" className={classes.title}>\r\n          Orbs Spent: {Boolean(data && data.orbs > -1) && data.orbs}\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(MainAppbar);\r\n","// From https://github.com/Hellenic/react-hexg\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass HexGrid extends Component {\r\n  static propTypes = {\r\n    width: PropTypes.oneOfType([\r\n      PropTypes.string.isRequired,\r\n      PropTypes.number.isRequired\r\n    ]),\r\n    height: PropTypes.oneOfType([\r\n      PropTypes.string.isRequired,\r\n      PropTypes.number.isRequired\r\n    ]),\r\n    viewBox: PropTypes.string,\r\n    children: PropTypes.node.isRequired\r\n  };\r\n\r\n  static defaultProps = {\r\n    width: 800,\r\n    height: 600,\r\n    viewBox: '-50 -50 100 100'\r\n  };\r\n\r\n  render() {\r\n    const { width, height, viewBox } = this.props;\r\n    return (\r\n      <svg\r\n        className=\"grid\"\r\n        width={width}\r\n        height={height}\r\n        viewBox={viewBox}\r\n        version=\"1.1\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        {this.props.children}\r\n      </svg>\r\n    );\r\n  }\r\n}\r\nexport default HexGrid;\r\n","// From https://github.com/Hellenic/react-hexg\r\n\r\nclass Hex {\r\n  constructor(q, r, s) {\r\n    this.q = q;\r\n    this.r = r;\r\n    this.s = s;\r\n  }\r\n}\r\n\r\nexport default Hex;\r\n","// From https://github.com/Hellenic/react-hexg\r\n\r\nclass Point {\r\n  constructor(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n}\r\n\r\nexport default Point;\r\n","// From https://github.com/Hellenic/react-hexg\r\n\r\nimport Hex from './Hex';\r\nimport Point from './Point';\r\n\r\nclass HexUtils {\r\n  static DIRECTIONS = [\r\n    new Hex(1, 0, -1),\r\n    new Hex(1, -1, 0),\r\n    new Hex(0, -1, 1),\r\n    new Hex(-1, 0, 1),\r\n    new Hex(-1, 1, 0),\r\n    new Hex(0, 1, -1)\r\n  ];\r\n\r\n  static equals(a, b) {\r\n    return a.q === b.q && a.r === b.r && a.s === b.s;\r\n  }\r\n\r\n  static add(a, b) {\r\n    return new Hex(a.q + b.q, a.r + b.r, a.s + b.s);\r\n  }\r\n\r\n  static subtract(a, b) {\r\n    return new Hex(a.q - b.q, a.r - b.r, a.s - b.s);\r\n  }\r\n\r\n  static multiply(a, k) {\r\n    return new Hex(a.q * k, a.r * k, a.s * k);\r\n  }\r\n\r\n  static lengths(hex) {\r\n    return parseInt((Math.abs(hex.q) + Math.abs(hex.r) + Math.abs(hex.s)) / 2);\r\n  }\r\n\r\n  static distance(a, b) {\r\n    return HexUtils.lengths(HexUtils.subtract(a, b));\r\n  }\r\n\r\n  static direction(direction) {\r\n    return HexUtils.DIRECTIONS[(6 + (direction % 6)) % 6];\r\n  }\r\n\r\n  static neighbour(hex, direction) {\r\n    return HexUtils.add(hex, HexUtils.direction(direction));\r\n  }\r\n\r\n  static neighbours(hex) {\r\n    const array = [];\r\n    for (let i = 0; i < HexUtils.DIRECTIONS.length; i += 1) {\r\n      array.push(HexUtils.neighbour(hex, i));\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  static round(hex) {\r\n    let rq = Math.round(hex.q);\r\n    let rr = Math.round(hex.r);\r\n    let rs = Math.round(hex.s);\r\n\r\n    const qDiff = Math.abs(rq - hex.q);\r\n    const rDiff = Math.abs(rr - hex.r);\r\n    const sDiff = Math.abs(rs - hex.s);\r\n\r\n    if (qDiff > rDiff && qDiff > sDiff) rq = -rr - rs;\r\n    else if (rDiff > sDiff) rr = -rq - rs;\r\n    else rs = -rq - rr;\r\n\r\n    return new Hex(rq, rr, rs);\r\n  }\r\n\r\n  static hexToPixel(hex, layout) {\r\n    const s = layout.spacing;\r\n    const M = layout.orientation;\r\n    let x = (M.f0 * hex.q + M.f1 * hex.r) * layout.size.x;\r\n    let y = (M.f2 * hex.q + M.f3 * hex.r) * layout.size.y;\r\n    // Apply spacing\r\n    x = x * s;\r\n    y = y * s;\r\n    return new Point(x + layout.origin.x, y + layout.origin.y);\r\n  }\r\n\r\n  static pixelToHex(point, layout) {\r\n    const M = layout.orientation;\r\n    const pt = new Point(\r\n      (point.x - layout.origin.x) / layout.size.x,\r\n      (point.y - layout.origin.y) / layout.size.y\r\n    );\r\n    const q = M.b0 * pt.x + M.b1 * pt.y;\r\n    const r = M.b2 * pt.x + M.b3 * pt.y;\r\n    const hex = new Hex(q, r, -q - r);\r\n    return HexUtils.round(hex);\r\n  }\r\n\r\n  static lerp(a, b, t) {\r\n    return a + (b - a) * t;\r\n  }\r\n\r\n  static hexLerp(a, b, t) {\r\n    return new Hex(\r\n      HexUtils.lerp(a.q, b.q, t),\r\n      HexUtils.lerp(a.r, b.r, t),\r\n      HexUtils.lerp(a.s, b.s, t)\r\n    );\r\n  }\r\n\r\n  static getID(hex) {\r\n    return `${hex.q},${hex.r},${hex.s}`;\r\n  }\r\n}\r\n\r\nexport default HexUtils;\r\n","// From https://github.com/Hellenic/react-hexg\r\n\r\nclass Orientation {\r\n  constructor(f0, f1, f2, f3, b0, b1, b2, b3, startAngle) {\r\n    this.f0 = f0;\r\n    this.f1 = f1;\r\n    this.f2 = f2;\r\n    this.f3 = f3;\r\n    this.b0 = b0;\r\n    this.b1 = b1;\r\n    this.b2 = b2;\r\n    this.b3 = b3;\r\n    this.startAngle = startAngle;\r\n  }\r\n}\r\n\r\nexport default Orientation;\r\n","// From https://github.com/Hellenic/react-hexg\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Orientation from './Orientation';\r\nimport Point from './Point';\r\n\r\nclass Layout extends Component {\r\n  static LAYOUT_FLAT = new Orientation(\r\n    3.0 / 2.0,\r\n    0.0,\r\n    Math.sqrt(3.0) / 2.0,\r\n    Math.sqrt(3.0),\r\n    2.0 / 3.0,\r\n    0.0,\r\n    -1.0 / 3.0,\r\n    Math.sqrt(3.0) / 3.0,\r\n    0.0\r\n  );\r\n  static LAYOUT_POINTY = new Orientation(\r\n    Math.sqrt(3.0),\r\n    Math.sqrt(3.0) / 2.0,\r\n    0.0,\r\n    3.0 / 2.0,\r\n    Math.sqrt(3.0) / 3.0,\r\n    -1.0 / 3.0,\r\n    0.0,\r\n    2.0 / 3.0,\r\n    0.5\r\n  );\r\n\r\n  static propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    className: PropTypes.string,\r\n    flat: PropTypes.bool,\r\n    origin: PropTypes.object,\r\n    size: PropTypes.object,\r\n    spacing: PropTypes.number\r\n  };\r\n\r\n  static defaultProps = {\r\n    size: new Point(10, 10),\r\n    flat: true,\r\n    spacing: 1.0,\r\n    origin: new Point(0, 0)\r\n  };\r\n\r\n  static childContextTypes = {\r\n    layout: PropTypes.object, // TODO Shape\r\n    points: PropTypes.string\r\n  };\r\n\r\n  getChildContext() {\r\n    const { children, flat, className, ...rest } = this.props;\r\n    const orientation = flat ? Layout.LAYOUT_FLAT : Layout.LAYOUT_POINTY;\r\n    const cornerCoords = this.calculateCoordinates(orientation);\r\n    const points = cornerCoords.map(point => `${point.x},${point.y}`).join(' ');\r\n    const childLayout = Object.assign({}, rest, { orientation });\r\n\r\n    return {\r\n      layout: childLayout,\r\n      points\r\n    };\r\n  }\r\n\r\n  getPointOffset(corner, orientation, size) {\r\n    let angle = (2.0 * Math.PI * (corner + orientation.startAngle)) / 6;\r\n    return new Point(size.x * Math.cos(angle), size.y * Math.sin(angle));\r\n  }\r\n\r\n  // TODO Refactor\r\n  calculateCoordinates(orientation) {\r\n    const corners = [];\r\n    const center = new Point(0, 0);\r\n    const { size } = this.props;\r\n\r\n    Array.from(new Array(6), (x, i) => {\r\n      const offset = this.getPointOffset(i, orientation, size);\r\n      const point = new Point(center.x + offset.x, center.y + offset.y);\r\n      corners.push(point);\r\n    });\r\n\r\n    return corners;\r\n  }\r\n\r\n  render() {\r\n    const { children, className } = this.props;\r\n    return <g className={className}>{children}</g>;\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","// From https://github.com/IcculusC/react-hex-engine/blob/master/src/Text.js\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Text = ({ anchor, children, className, x, y }) => (\r\n  <text\r\n    className={className}\r\n    textAnchor={anchor}\r\n    x={x || 0}\r\n    y={y ? y : '0.3em'}\r\n  >\r\n    {children}\r\n  </text>\r\n);\r\n\r\nText.propTypes = {\r\n  anchor: PropTypes.string,\r\n  children: PropTypes.string,\r\n  classes: PropTypes.objectOf(PropTypes.string),\r\n  x: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  y: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n};\r\n\r\nText.defaultProps = {\r\n  anchor: 'middle',\r\n  classes: { text: '' }\r\n};\r\n\r\nexport const Text_ = Text;\r\nexport default Text_;\r\n","// Refactored from https://github.com/Hellenic/react-hexgrid\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Hex from './Hex';\r\nimport HexUtils from './HexUtils';\r\nimport { connect } from 'react-redux';\r\nimport { displayGridData, hideGridData } from '../../actions/actionCreators';\r\n\r\nclass Hexagon extends Component {\r\n  static propTypes = {\r\n    q: PropTypes.number.isRequired,\r\n    r: PropTypes.number.isRequired,\r\n    s: PropTypes.number.isRequired,\r\n    fill: PropTypes.string,\r\n    cellStyle: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n    className: PropTypes.string,\r\n    data: PropTypes.object,\r\n    onMouseEnter: PropTypes.func,\r\n    onMouseOver: PropTypes.func,\r\n    onMouseLeave: PropTypes.func,\r\n    onClick: PropTypes.func,\r\n    children: PropTypes.node\r\n  };\r\n\r\n  static contextTypes = {\r\n    layout: PropTypes.object,\r\n    points: PropTypes.string\r\n  };\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    const { q, r, s } = props;\r\n    const { layout } = context;\r\n    const hex = new Hex(q, r, s);\r\n    const pixel = HexUtils.hexToPixel(hex, layout);\r\n    this.state = { hex, pixel };\r\n  }\r\n\r\n  // TODO Refactor to reduce duplicate\r\n  componentWillReceiveProps(nextProps) {\r\n    const { q, r, s } = nextProps;\r\n    const { layout } = this.context;\r\n    const hex = new Hex(q, r, s);\r\n    const pixel = HexUtils.hexToPixel(hex, layout);\r\n    this.setState({ hex, pixel });\r\n  }\r\n\r\n  onMouseEnter(e) {\r\n    if (this.props.onMouseEnter) {\r\n      this.props.onMouseEnter(e, this);\r\n    }\r\n    this.props.displayGridData(this.props.data);\r\n  }\r\n\r\n  onMouseOver(e) {\r\n    if (this.props.onMouseOver) {\r\n      this.props.onMouseOver(e, this);\r\n    }\r\n  }\r\n\r\n  onMouseLeave(e) {\r\n    if (this.props.onMouseLeave) {\r\n      this.props.onMouseLeave(e, this);\r\n    }\r\n    this.props.hideGridData();\r\n  }\r\n\r\n  onClick = e => {\r\n    if (e && this.props.onClickHandler) {\r\n      this.props.onClickHandler(e, this.props.data);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { fill, cellStyle, className } = this.props;\r\n    const { points } = this.context;\r\n    const { pixel } = this.state;\r\n    const fillId = fill ? fill : null;\r\n    return (\r\n      <g\r\n        className=\"hexagon-group\"\r\n        transform={`translate(${pixel.x}, ${pixel.y})`}\r\n        draggable=\"true\"\r\n        data={''}\r\n        onMouseEnter={e => this.onMouseEnter(e)}\r\n        onMouseOver={e => this.onMouseOver(e)}\r\n        onMouseLeave={e => this.onMouseLeave(e)}\r\n        onClick={e => this.onClick(e)}\r\n        data-coords={`q: ${this.props.q}, r: ${this.props.r}`}\r\n        data-q={this.props.q}\r\n        data-r={this.props.r}\r\n        data-cell-id={this.props.data.cellId}\r\n      >\r\n        <g className={classNames('hexagon', className)}>\r\n          <polygon points={points} fill={fillId} style={cellStyle} />\r\n          {this.props.children}\r\n        </g>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  grid: state.grid\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  displayGridData,\r\n  hideGridData\r\n})(Hexagon);\r\n","// From https://github.com/Hellenic/react-hexg\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Point from './Point';\r\n\r\nclass Pattern extends Component {\r\n  static propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    link: PropTypes.string,\r\n    size: PropTypes.object\r\n  };\r\n  static defaultProps = {\r\n    size: new Point(10, 10)\r\n  };\r\n\r\n  render() {\r\n    const { id, link, size } = this.props;\r\n    return (\r\n      <defs>\r\n        <pattern\r\n          id={id}\r\n          patternUnits=\"objectBoundingBox\"\r\n          x={0}\r\n          y={0}\r\n          width={size.x}\r\n          height={size.y}\r\n        >\r\n          <image\r\n            xlinkHref={link}\r\n            x={0}\r\n            y={0}\r\n            width={size.x * 0.9}\r\n            height={size.y * 0.9}\r\n          />\r\n        </pattern>\r\n      </defs>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pattern;\r\n","import { createStyles } from '@material-ui/core/styles';\r\n\r\nexport default createStyles(theme => ({\r\n  progressWrapper: {\r\n    position: \" absolute\",\r\n    top: \" 50%\",\r\n    left: \" 50%\",\r\n    transform: \" translate(-50%, -50%)\",\r\n  },\r\n  selectedPokemonCell: {\r\n    textTransform: \"capitalize\"\r\n  }\r\n}));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { HexGrid, Layout, Hexagon, Text } from '../Hexagon';\r\nimport {\r\n  pikachuGridData,\r\n  torkoalGridData,\r\n  infernapeGridData,\r\n  dewgongGridData,\r\n  haxorusGridData,\r\n  kingdraGridData,\r\n  serperiorGridData,\r\n  vileplumeGridData,\r\n  mewGridData,\r\n  metagrossGridData,\r\n  charizardGridData,\r\n  shortenedMoveNameByCellId\r\n} from '../../data';\r\nimport {\r\n  addToGridList,\r\n  removeFromGridList,\r\n  subtractFromRemainingEnergy,\r\n  addBackToRemainingEnergy,\r\n  resetGrids\r\n} from '../../actions/actionCreators';\r\nimport styles from './styles';\r\n\r\nconst allSyncGrids = {\r\n  pikachuGridData,\r\n  torkoalGridData,\r\n  infernapeGridData,\r\n  dewgongGridData,\r\n  haxorusGridData,\r\n  kingdraGridData,\r\n  serperiorGridData,\r\n  vileplumeGridData,\r\n  mewGridData,\r\n  charizardGridData,\r\n  metagrossGridData\r\n};\r\n\r\nclass GridMap extends Component {\r\n  state = {\r\n    initialRender: true,\r\n    mapSizeBoundaries: {\r\n      width: '100vw',\r\n      height: 440,\r\n      viewbox: '-35 -35 70 70'\r\n    },\r\n    screenWidth: document.body.clientWidth\r\n  };\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => this.fitMapToScreen(), 1000);\r\n    window.addEventListener('resize', this.fitMapToScreen);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.fitMapToScreen);\r\n  }\r\n\r\n  fitMapToScreen = () => {\r\n    const clientWrappingBoundaries = {\r\n      width: document.body.clientWidth,\r\n      height: document.body.clientHeight\r\n    };\r\n    let updatedMapSizeBoundaries = {\r\n      ...this.state.mapSizeBoundaries\r\n    };\r\n\r\n    if (clientWrappingBoundaries.width > 1200) {\r\n      updatedMapSizeBoundaries = {\r\n        width: 800,\r\n        height: 768,\r\n        viewbox: '-50 -50 100 100'\r\n      };\r\n    }\r\n\r\n    if (\r\n      clientWrappingBoundaries.width > 960 &&\r\n      clientWrappingBoundaries.width < 1200\r\n    ) {\r\n      updatedMapSizeBoundaries = {\r\n        width: '100vw',\r\n        height: 768,\r\n        viewbox: '-15 -50 100 100'\r\n      };\r\n    }\r\n\r\n    if (clientWrappingBoundaries.width <= 960) {\r\n      updatedMapSizeBoundaries = {\r\n        width: '100vw',\r\n        height: 768,\r\n        viewbox: '-50 -50 100 100'\r\n      };\r\n    }\r\n\r\n    if (clientWrappingBoundaries.width < 768) {\r\n      updatedMapSizeBoundaries = {\r\n        width: '100vw',\r\n        height: (\r\n          ((clientWrappingBoundaries.width / 100) * 73.28) / 2 +\r\n          clientWrappingBoundaries.width\r\n        ).toFixed(),\r\n        viewbox: '-35 -35 70 70'\r\n      };\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      initialRender: false,\r\n      mapSizeBoundaries: {\r\n        ...prevState.mapSizeBoundaries,\r\n        ...updatedMapSizeBoundaries\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleClick(e, index, data) {\r\n    e.stopPropagation();\r\n\r\n    if (!this.props.grid.selectedCellsById[data.cellId]) {\r\n      this.props.addToGridList(data);\r\n      this.props.subtractFromRemainingEnergy(data);\r\n    } else {\r\n      this.props.removeFromGridList(data);\r\n      this.props.addBackToRemainingEnergy(data);\r\n    }\r\n  }\r\n\r\n  getFillColorByMoveType = ({ type, group, isLocked }) => {\r\n    let colorsByTypeDef = {\r\n      statsBoost: '#66b6ec', // blue\r\n      passive: '#fff04d', // yellow\r\n      moveEffect: '#f24646', // red\r\n      movePowerBoost: '#73d958', // green\r\n      moveAccuracyBoost: '#73d958', // green\r\n      syncBoost: '#d12deb', // purple\r\n      locked: '#dedbd3' // gray\r\n    };\r\n    let colorsByTypeId = {\r\n      1: colorsByTypeDef.statsBoost,\r\n      2: colorsByTypeDef.statsBoost,\r\n      3: colorsByTypeDef.statsBoost,\r\n      4: colorsByTypeDef.statsBoost,\r\n      5: colorsByTypeDef.statsBoost,\r\n      6: colorsByTypeDef.statsBoost,\r\n      7: colorsByTypeDef.passive,\r\n      8: colorsByTypeDef.moveEffect,\r\n      9: colorsByTypeDef.movePowerBoost,\r\n      10: colorsByTypeDef.moveAccuracyBoost\r\n    };\r\n    let cellColor = colorsByTypeDef.syncBoost;\r\n\r\n    if (group !== 3) {\r\n      cellColor = colorsByTypeId[type];\r\n    }\r\n\r\n    if (isLocked) {\r\n      cellColor = colorsByTypeDef.locked;\r\n    }\r\n\r\n    return cellColor;\r\n  };\r\n\r\n  renderMoveName = (moveName, abilityId) => {\r\n    let renderedMoveName = moveName;\r\n\r\n    if (moveName.length > 11) {\r\n      if (shortenedMoveNameByCellId[abilityId]) {\r\n        renderedMoveName = shortenedMoveNameByCellId[abilityId];\r\n      }\r\n    }\r\n\r\n    return renderedMoveName;\r\n  };\r\n\r\n  renderHexagonCells = () =>\r\n    allSyncGrids[`${this.props.pokemon}GridData`].map((cell, index) => {\r\n      // remove \"Move:\" from the start of moveName\r\n      let moveName =\r\n        cell.move.name.substring(0, 5) === 'Move:'\r\n          ? cell.move.name.substring(6)\r\n          : cell.move.name;\r\n\r\n      let pokemon = this.props.pokemon;\r\n      let nameWithSyncLvRequirement;\r\n      if (\r\n        pokemon === 'pikachu' ||\r\n        pokemon === 'charizard' ||\r\n        pokemon === 'dewgong' ||\r\n        pokemon === 'infernape' ||\r\n        pokemon === 'haxorus' ||\r\n        pokemon === 'kingdra' ||\r\n        pokemon === 'metagross'\r\n      ) {\r\n        if (\r\n          (cell.coords.q === 0 && cell.coords.r === 3) ||\r\n          (cell.coords.q === 0 && cell.coords.r === -3) ||\r\n          (cell.coords.q === 1 && cell.coords.r === -5) ||\r\n          (cell.coords.q === 2 && cell.coords.r === -6) ||\r\n          (cell.coords.q === -3 && cell.coords.r === -1) ||\r\n          (cell.coords.q === -2 && cell.coords.r === -2) ||\r\n          (cell.coords.q === 2 && cell.coords.r === 2) ||\r\n          (cell.coords.q === 3 && cell.coords.r === 1) ||\r\n          (cell.coords.q === -1 && cell.coords.r === 5) ||\r\n          (cell.coords.q === -2 && cell.coords.r === 6)\r\n        ) {\r\n          nameWithSyncLvRequirement = moveName + ' [Sync Lv3]';\r\n        } else if (\r\n          (cell.coords.q === 3 && cell.coords.r === -6) ||\r\n          (cell.coords.q === 2 && cell.coords.r === -5) ||\r\n          (cell.coords.q === 1 && cell.coords.r === -4) ||\r\n          (cell.coords.q === -1 && cell.coords.r === -2) ||\r\n          (cell.coords.q === -2 && cell.coords.r === -1) ||\r\n          (cell.coords.q === -3 && cell.coords.r === 0) ||\r\n          (cell.coords.q === 3 && cell.coords.r === 0) ||\r\n          (cell.coords.q === 2 && cell.coords.r === 1) ||\r\n          (cell.coords.q === 1 && cell.coords.r === 2) ||\r\n          (cell.coords.q === -1 && cell.coords.r === 4) ||\r\n          (cell.coords.q === -2 && cell.coords.r === 5) ||\r\n          (cell.coords.q === -3 && cell.coords.r === 6)\r\n        ) {\r\n          nameWithSyncLvRequirement = moveName + ' [Sync Lv2]';\r\n        }\r\n      }\r\n\r\n      if (pokemon === 'torkoal' || pokemon === 'vileplume') {\r\n        if (\r\n          (cell.coords.q === 0 && cell.coords.r === 3) ||\r\n          (cell.coords.q === 0 && cell.coords.r === -3) ||\r\n          (cell.coords.q === 2 && cell.coords.r === -6) ||\r\n          (cell.coords.q === 1 && cell.coords.r === -5) ||\r\n          (cell.coords.q === -1 && cell.coords.r === -4) ||\r\n          (cell.coords.q === -2 && cell.coords.r === -4) ||\r\n          (cell.coords.q === 2 && cell.coords.r === 2) ||\r\n          (cell.coords.q === 1 && cell.coords.r === 2) ||\r\n          (cell.coords.q === -1 && cell.coords.r === 3) ||\r\n          (cell.coords.q === -2 && cell.coords.r === 4)\r\n        ) {\r\n          nameWithSyncLvRequirement = moveName + ' [Sync Lv3]';\r\n        } else if (\r\n          (cell.coords.q === 3 && cell.coords.r === -6) ||\r\n          (cell.coords.q === 2 && cell.coords.r === -5) ||\r\n          (cell.coords.q === 1 && cell.coords.r === -4) ||\r\n          (cell.coords.q === -1 && cell.coords.r === -3) ||\r\n          (cell.coords.q === -2 && cell.coords.r === -3) ||\r\n          (cell.coords.q === -3 && cell.coords.r === -3) ||\r\n          (cell.coords.q === 3 && cell.coords.r === 0) ||\r\n          (cell.coords.q === 3 && cell.coords.r === 1) ||\r\n          (cell.coords.q === 2 && cell.coords.r === 1) ||\r\n          (cell.coords.q === -3 && cell.coords.r === 3) ||\r\n          (cell.coords.q === -3 && cell.coords.r === 4) ||\r\n          (cell.coords.q === -2 && cell.coords.r === 3)\r\n        ) {\r\n          nameWithSyncLvRequirement = moveName + ' [Sync Lv2]';\r\n        }\r\n      }\r\n\r\n      if (pokemon === 'serperior') {\r\n        if (\r\n          (cell.coords.q === 0 && cell.coords.r === 3) ||\r\n          (cell.coords.q === 0 && cell.coords.r === -3) ||\r\n          (cell.coords.q === 2 && cell.coords.r === -6) ||\r\n          (cell.coords.q === 1 && cell.coords.r === -5) ||\r\n          (cell.coords.q === -1 && cell.coords.r === -3) ||\r\n          (cell.coords.q === -3 && cell.coords.r === -2) ||\r\n          (cell.coords.q === 2 && cell.coords.r === 4) ||\r\n          (cell.coords.q === 1 && cell.coords.r === 4) ||\r\n          (cell.coords.q === -1 && cell.coords.r === 4) ||\r\n          (cell.coords.q === -3 && cell.coords.r === 5)\r\n        ) {\r\n          nameWithSyncLvRequirement = moveName + ' [Sync Lv3]';\r\n        } else if (\r\n          (cell.coords.q === 3 && cell.coords.r === -6) ||\r\n          (cell.coords.q === 2 && cell.coords.r === -5) ||\r\n          (cell.coords.q === 1 && cell.coords.r === -4) ||\r\n          (cell.coords.q === -1 && cell.coords.r === -2) ||\r\n          (cell.coords.q === -2 && cell.coords.r === -2) ||\r\n          (cell.coords.q === -3 && cell.coords.r === -1) ||\r\n          (cell.coords.q === 1 && cell.coords.r === 3) ||\r\n          (cell.coords.q === 2 && cell.coords.r === 3) ||\r\n          (cell.coords.q === 3 && cell.coords.r === 3) ||\r\n          (cell.coords.q === -3 && cell.coords.r === 4) ||\r\n          (cell.coords.q === -2 && cell.coords.r === 4) ||\r\n          (cell.coords.q === -1 && cell.coords.r === 3)\r\n        ) {\r\n          nameWithSyncLvRequirement = moveName + ' [Sync Lv2]';\r\n        }\r\n      }\r\n\r\n      if (pokemon === 'mew') {\r\n        if (\r\n          (cell.coords.q === 3 && cell.coords.r === -4) ||\r\n          (cell.coords.q === 4 && cell.coords.r === -4) ||\r\n          (cell.coords.q === 4 && cell.coords.r === -3) ||\r\n          (cell.coords.q === 1 && cell.coords.r === 3) ||\r\n          (cell.coords.q === 0 && cell.coords.r === 4) ||\r\n          (cell.coords.q === -1 && cell.coords.r === 4) ||\r\n          (cell.coords.q === -3 && cell.coords.r === -1) ||\r\n          (cell.coords.q === -4 && cell.coords.r === 0) ||\r\n          (cell.coords.q === -4 && cell.coords.r === 1)\r\n        ) {\r\n          nameWithSyncLvRequirement = moveName + ' [Sync Lv3]';\r\n        } else if (\r\n          (cell.coords.q === -1 && cell.coords.r === -3) ||\r\n          (cell.coords.q === 0 && cell.coords.r === -4) ||\r\n          (cell.coords.q === 1 && cell.coords.r === -4) ||\r\n          (cell.coords.q === 4 && cell.coords.r === -1) ||\r\n          (cell.coords.q === 4 && cell.coords.r === 0) ||\r\n          (cell.coords.q === 3 && cell.coords.r === 1) ||\r\n          (cell.coords.q === -3 && cell.coords.r === 4) ||\r\n          (cell.coords.q === -4 && cell.coords.r === 4) ||\r\n          (cell.coords.q === -4 && cell.coords.r === 3)\r\n        ) {\r\n          nameWithSyncLvRequirement = moveName + ' [Sync Lv2]';\r\n        }\r\n      }\r\n\r\n      const hexagonProps = {\r\n        data: {\r\n          cellId: cell.cellId,\r\n          name: nameWithSyncLvRequirement || moveName,\r\n          description: cell.move.description,\r\n          energy: cell.move.energyCost\r\n        },\r\n        onMouseEnter: this.mouseEnter,\r\n        onMouseLeave: this.mouseLeave,\r\n        key: cell.cellId,\r\n        q: cell.coords.q,\r\n        r: cell.coords.r,\r\n        s: 0,\r\n        fill: this.getFillColorByMoveType({\r\n          type: cell.ability.type,\r\n          group: cell.move.group,\r\n          isLocked: cell.move.locked\r\n        }),\r\n        onClickHandler: (e, data) => this.handleClick(e, index, data),\r\n        className: this.props.grid.selectedCellsById[cell.cellId]\r\n          ? 'selected'\r\n          : null\r\n      };\r\n\r\n      return (\r\n        <Hexagon {...hexagonProps}>\r\n          <Text>\r\n            {this.renderMoveName(cell.move.name, cell.ability.abilityId)}\r\n          </Text>\r\n          {this.state.screenWidth < 960 &&\r\n          cell.move.energyCost !== undefined ? (\r\n            <text\r\n              className=\"energy-inside-grid\"\r\n              textAnchor=\"middle\"\r\n              x=\"0\"\r\n              y=\"1.6em\"\r\n            >\r\n              ({cell.move.energyCost})\r\n            </text>\r\n          ) : null}\r\n        </Hexagon>\r\n      );\r\n    });\r\n\r\n  render() {\r\n    const { mapSizeBoundaries, initialRender } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return initialRender ? (\r\n      <div className={classes.progressWrapper}>\r\n        <CircularProgress color=\"secondary\" />\r\n      </div>\r\n    ) : (\r\n      <HexGrid\r\n        width={mapSizeBoundaries.width}\r\n        height={mapSizeBoundaries.height}\r\n        viewBox={mapSizeBoundaries.viewbox}\r\n      >\r\n        <Layout\r\n          size={{ x: 4.5, y: 4.5 }}\r\n          flat={true}\r\n          spacing={1.1}\r\n          origin={{ x: 0, y: 0 }}\r\n        >\r\n          <Hexagon q={0} r={0} s={0} fill=\"#fff\" data={{ cellId: 0 }}>\r\n            <Text className={classes.selectedPokemonCell}>\r\n              {this.props.pokemon}\r\n            </Text>\r\n          </Hexagon>\r\n          {this.renderHexagonCells()}\r\n        </Layout>\r\n      </HexGrid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  pokemon: state.pokemon.selectedPokemon.toLowerCase(),\r\n  grid: state.grid\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addToGridList,\r\n  removeFromGridList,\r\n  subtractFromRemainingEnergy,\r\n  addBackToRemainingEnergy,\r\n  resetGrids\r\n})(withStyles(styles)(GridMap));\r\n","import { createStyles } from '@material-ui/core/styles';\r\n\r\nexport default createStyles(theme => ({\r\n  mainContainer: {\r\n    width: '100%',\r\n    paddingTop: 136,\r\n    paddingBottom: 155\r\n  },\r\n  syncGridWrapper: {\r\n    width: '100%',\r\n    height: '100%',\r\n    overflow: 'scroll'\r\n  }\r\n}));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ReactGA from 'react-ga';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport SyncGridControls from '../../components/SyncGridControls';\r\nimport Navigation from '../../components/Navigation';\r\nimport { SelectedSkillListMobile } from '../../components/SelectedSkillList';\r\nimport { SkillOverviewMobile } from '../../components/SkillOverview';\r\nimport MainAppbar from '../../components/MainAppbar';\r\nimport GridMap from '../../components/GridMap';\r\nimport styles from './styles';\r\n\r\nimport { selectPokemon, resetGrids } from '../../actions/actionCreators';\r\n\r\nclass MobileApp extends Component {\r\n  state = {\r\n    isNavOpened: false,\r\n    isSkillListOpened: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    ReactGA.pageview(window.location.pathname + window.location.search);\r\n  }\r\n\r\n  handleOnCloseNav = () => this.setState({ isNavOpened: false });\r\n\r\n  handleOnOpenNav = () => this.setState({ isNavOpened: true });\r\n\r\n  handleOnCloseSkillList = () => this.setState({ isSkillListOpened: false });\r\n\r\n  handleOnOpenSkillList = () => this.setState({ isSkillListOpened: true });\r\n\r\n  handleOnChangePokemon = value => {\r\n    this.props.selectPokemon(value);\r\n    this.props.resetGrids();\r\n  };\r\n\r\n  render() {\r\n    const { isNavOpened, isSkillListOpened } = this.state;\r\n    const { classes, pokemon, grid } = this.props;\r\n\r\n    let skillList = Object.keys(grid.selectedCellsById)\r\n      .map(cellId => {\r\n        return grid.selectedCellsById[cellId].name;\r\n      })\r\n      .sort();\r\n\r\n    return (\r\n      <>\r\n        <Navigation\r\n          isOpened={isNavOpened}\r\n          onCloseHandler={this.handleOnCloseNav}\r\n        />\r\n\r\n        <SelectedSkillListMobile\r\n          isOpened={isSkillListOpened}\r\n          onOpenHandler={this.handleOnOpenSkillList}\r\n          onCloseHandler={this.handleOnCloseSkillList}\r\n          skillList={skillList}\r\n        />\r\n\r\n        <MainAppbar\r\n          onOpenNavHandler={this.handleOnOpenNav}\r\n          data={{\r\n            energy: grid.remainingEnergy,\r\n            orbs: grid.orbSpent\r\n          }}\r\n        />\r\n\r\n        <div className={classes.mainContainer}>\r\n          <SyncGridControls\r\n            selectedPokemon={pokemon.selectedPokemon}\r\n            onChangePokemonHandler={this.handleOnChangePokemon}\r\n            onOpenSkillListHandler={this.handleOnOpenSkillList}\r\n          />\r\n\r\n          <Grid container alignItems=\"stretch\" justify=\"center\">\r\n            <Grid item xs={12}>\r\n              <div className={classes.syncGridWrapper}>\r\n                <GridMap />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <SkillOverviewMobile\r\n            skill={grid.gridData.name}\r\n            description={\r\n              grid.gridData.description ? grid.gridData.description : ''\r\n            }\r\n            energy={grid.gridData.energy}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  pokemon: state.pokemon,\r\n  grid: state.grid\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  selectPokemon,\r\n  resetGrids\r\n})(withStyles(styles)(MobileApp));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ReactGA from 'react-ga';\r\n\r\nimport { SelectedSkillListDesktop } from '../../components/SelectedSkillList';\r\nimport { FeedbackFormDesktop } from '../../components/FeedbackForm';\r\nimport SelectPokemonDropdown from '../../components/SelectPokemonDropdown';\r\nimport { ResetGridButtonDesktop } from '../../components/ResetGridButton';\r\nimport GridMap from '../../components/GridMap';\r\nimport { SkillOverviewDesktop } from '../../components/SkillOverview';\r\nimport { selectPokemon, resetGrids } from '../../actions/actionCreators';\r\n\r\nclass DesktopLayout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.selectPokemon = this.selectPokemon.bind(this);\r\n  }\r\n\r\n  selectPokemon(value) {\r\n    this.props.selectPokemon(value);\r\n    this.props.resetGrids();\r\n  }\r\n\r\n  componentDidMount() {\r\n    ReactGA.pageview(window.location.pathname + window.location.search);\r\n  }\r\n\r\n  render() {\r\n    const { pokemon } = this.props;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n          <div className=\"container container-s\">\r\n            <span className=\"navbar-brand mb-0 h1\">Sync Grid Helper</span>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-dark\"\r\n              id=\"feedback-button\"\r\n              data-toggle=\"modal\"\r\n              data-target=\"#feedbackModal\"\r\n            >\r\n              Submit Feedback\r\n            </button>\r\n            <FeedbackFormDesktop />\r\n          </div>\r\n        </nav>\r\n        <div className=\"content\">\r\n          <div className=\"container container-s\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-8\">\r\n                <div style={{ marginTop: 24 }}>\r\n                  <SelectPokemonDropdown\r\n                    selectedPokemon={pokemon.selectedPokemon}\r\n                    onChangeHandler={this.selectPokemon}\r\n                  />\r\n                  <br /> <ResetGridButtonDesktop />\r\n                  <div className=\"grid-data-display position-fixed\">\r\n                    <SkillOverviewDesktop />\r\n                  </div>\r\n                  <GridMap />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-4 position-static mt-5\">\r\n                <SelectedSkillListDesktop />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  pokemon: state.pokemon\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  selectPokemon,\r\n  resetGrids\r\n})(DesktopLayout);\r\n","import { SELECT_POKEMON } from '../actions/types';\r\n\r\nconst initialState = { selectedPokemon: 'Pikachu' };\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SELECT_POKEMON:\r\n      return {\r\n        selectedPokemon: action.selectedPokemon\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  DISPLAY_GRID_DATA,\r\n  HIDE_GRID_DATA,\r\n  ADD_TO_GRID_LIST,\r\n  REMOVE_FROM_GRID_LIST,\r\n  SUBTRACT_FROM_REMAINING_ENERGY,\r\n  ADD_BACK_TO_REMAINING_ENERGY,\r\n  RESET_GRIDS\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  gridData: {},\r\n  remainingEnergy: 60,\r\n  orbSpent: 0,\r\n  activeGridList: [],\r\n  selectedCellsById: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case DISPLAY_GRID_DATA:\r\n      return { ...state, gridData: action.gridData };\r\n    case HIDE_GRID_DATA:\r\n      return { ...state, gridData: {} };\r\n    case ADD_TO_GRID_LIST:\r\n      return {\r\n        ...state,\r\n        activeGridList: [\r\n          ...state.activeGridList,\r\n          action.gridData.description\r\n        ].sort(),\r\n        selectedCellsById: {\r\n          ...state.selectedCellsById,\r\n          [action.gridData.cellId]: action.gridData\r\n        }\r\n      };\r\n    case REMOVE_FROM_GRID_LIST:\r\n      const updateSelectedCellsById = { ...state.selectedCellsById };\r\n      delete updateSelectedCellsById[action.gridData.cellId];\r\n\r\n      return {\r\n        ...state,\r\n        activeGridList: [\r\n          ...state.activeGridList.slice(\r\n            0,\r\n            state.activeGridList.indexOf(action.gridData.description)\r\n          ),\r\n          ...state.activeGridList.slice(\r\n            state.activeGridList.indexOf(action.gridData.description) + 1\r\n          )\r\n        ],\r\n        selectedCellsById: updateSelectedCellsById\r\n      };\r\n    case SUBTRACT_FROM_REMAINING_ENERGY:\r\n      return {\r\n        ...state,\r\n        remainingEnergy: state.remainingEnergy - action.gridData.energy,\r\n        orbSpent:\r\n          state.orbSpent +\r\n          (action.gridData.energy === 0 ? 5 : action.gridData.energy * 12)\r\n      };\r\n    case ADD_BACK_TO_REMAINING_ENERGY:\r\n      return {\r\n        ...state,\r\n        remainingEnergy: state.remainingEnergy + action.gridData.energy,\r\n        orbSpent:\r\n          state.orbSpent -\r\n          (action.gridData.energy === 0 ? 5 : action.gridData.energy * 12)\r\n      };\r\n    case RESET_GRIDS:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport pokemonReducer from './pokemonReducer';\r\nimport gridReducer from './gridReducer';\r\n\r\nexport default combineReducers({\r\n  pokemon: pokemonReducer,\r\n  grid: gridReducer\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette : {\r\n    primary: {\r\n      main: \"#343a40\",\r\n    },\r\n    secondary: {\r\n      main: \"#d33737\"\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactGA from 'react-ga';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { createMigrate, persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\r\n\r\nimport MobileLayout from './containers/MobileLayout';\r\nimport DesktopLayout from './containers/DesktopLayout';\r\nimport rootReducer from './reducers';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport theme from './theme';\r\nimport { UA_ID } from './utils/constants';\r\nimport './index.css';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  version: 0,\r\n  storage,\r\n  migrate: createMigrate(migrations, { debug: false })\r\n};\r\n\r\nconst migrations = {\r\n  0: state => {\r\n    return {\r\n      ...state,\r\n      grid: {\r\n        ...state.grid,\r\n        selectedCellsById: state.grid.selectedCellsById\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = createStore(\r\n  persistedReducer,\r\n  {},\r\n  composeWithDevTools(applyMiddleware())\r\n);\r\n\r\nconst persistor = persistStore(store);\r\n\r\nReactGA.initialize(UA_ID);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <ThemeProvider theme={theme}>\r\n        <Hidden smDown>\r\n          <DesktopLayout />\r\n        </Hidden>\r\n        <Hidden mdUp>\r\n          <MobileLayout />\r\n        </Hidden>\r\n      </ThemeProvider>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const UA_ID = \"UA-157426792-1\";"],"sourceRoot":""}